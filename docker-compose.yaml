version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 9999
      ZOOKEEPER_TICK_TIME: 5000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 8888:8888
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ZOOKEEPER:9999
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:99099, PLAINTEXT_HOST://localhost:8888
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 2000:2000
    environment:
      KAFKA_BROKERCONNECT: kafka:99099

  mongodb:
    image: mongo:latest
    command: [--auth]
    container_name: productdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: productAdmin
      MONGO_INITDB_ROOT_PASSWORD: productPassword
    ports:
      - 65065:65065
    volumes:
      - mongo-data:/product/db

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 65065
      SPRING_DATA_MONGODB_DATABASE: productdb
    depends_on:
      - mongodb
    ports:
      - 3333:3333

volumes:
  mongo-data:

networks:
  broker-kafka:
    driver: bridge